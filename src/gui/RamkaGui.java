/*
 *
 */
package gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.Statement;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.LinkedList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataSource;
import javax.naming.InitialContext;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static sun.security.jgss.GSSUtil.login;


public class RamkaGui extends javax.swing.JFrame {

    /**
     * Tworzenie ramki RamkaGui
     */
    public RamkaGui() {
        initComponents();
        // ustalenie parametrów początkowych ramki
        setTitle("Gui Adrian ver 0.1");
        int szerokoscRamki = 900;
        int wysokoscRamki = 570;
        setSize(new Dimension(szerokoscRamki, wysokoscRamki));
//        setLocationRelativeTo(null);
        // ustalenie parametrów i miejsca wyświetlania okna głównego
        int szerokoscEkranu = Toolkit.getDefaultToolkit().getScreenSize().width; 
        int wysokoscEkranu = Toolkit.getDefaultToolkit().getScreenSize().height; 
        
        this.setLocation((szerokoscEkranu-szerokoscRamki)/2, (wysokoscEkranu-wysokoscRamki)/2);
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);// wyłączenie defaultowego wyłączania "krzyżykiem"
        
        // Okno dialogowe - informacja o programie
        int szerokoscDialogu = 440;
        int wysokoscDialogu = 520;
        // ustalenie wymiarów i położenia okna dialogowego, 
        DialogInformacja.setSize( new Dimension(szerokoscDialogu,wysokoscDialogu));
        DialogInformacja.setLocation((szerokoscEkranu-szerokoscDialogu)/2, (wysokoscEkranu-wysokoscDialogu)/2);
        // wybór opcji zamknięcia, zabezpieczenie przed przypadkowym zamknięciem
        addWindowListener(new WindowAdapter()
                {
                    public void windowClosing(WindowEvent e)
                    {
                        int value =JOptionPane.showOptionDialog(
                                null,
                                "Czy chcesz zamknąć okno",
                                "Uwaga",
                                JOptionPane.YES_NO_CANCEL_OPTION,
                                JOptionPane.WARNING_MESSAGE,
                                null,
                                new String[] { "Tak",  "Nie" },
                                "Tak"
                                );
                        if(value == JOptionPane.YES_OPTION)
                        {
                            dispose();
                            System.exit(0);
                        }
                                         
                    }


                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogInformacja = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        ButtonWypelnijToolbar = new javax.swing.JButton();
        ButtonSredniaToolbar = new javax.swing.JButton();
        ButtonSumaToolbar = new javax.swing.JButton();
        ButtonInfoToolBar = new javax.swing.JButton();
        ButtonPomoc = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDanych = new javax.swing.JTable();
        WprowadzonaLiczba = new javax.swing.JTextField();
        spinerKolumna = new javax.swing.JSpinner();
        spinerWiersz = new javax.swing.JSpinner();
        ButtonWypelnij = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaRezultat = new javax.swing.JTextArea();
        ButtonZerowanie = new javax.swing.JButton();
        ButtonZapiszDoPliku = new javax.swing.JButton();
        ComboBoxWybor = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        ButtonZapiszDoBazy = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPlik = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuEdycja = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuOperacje = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuPomoc = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        DialogInformacja.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("Zamknij");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Projekty\\Java\\Zasoby\\java-bg400.jpg")); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(1250, 768));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Program testowy- moje GUI");

        jLabel6.setText("Wykonawca: Adrian.    Kontakt adrian@edenland.pl");

        javax.swing.GroupLayout DialogInformacjaLayout = new javax.swing.GroupLayout(DialogInformacja.getContentPane());
        DialogInformacja.getContentPane().setLayout(DialogInformacjaLayout);
        DialogInformacjaLayout.setHorizontalGroup(
            DialogInformacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogInformacjaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DialogInformacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DialogInformacjaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(DialogInformacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DialogInformacjaLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DialogInformacjaLayout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(173, 173, 173))))
                    .addGroup(DialogInformacjaLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DialogInformacjaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(91, 91, 91))
        );
        DialogInformacjaLayout.setVerticalGroup(
            DialogInformacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogInformacjaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jToolBar1.setBackground(new java.awt.Color(204, 204, 204));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        ButtonWypelnijToolbar.setBackground(new java.awt.Color(204, 204, 204));
        ButtonWypelnijToolbar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/dodaj.png"))); // NOI18N
        ButtonWypelnijToolbar.setToolTipText("Wypełnij");
        ButtonWypelnijToolbar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ButtonWypelnijToolbar.setFocusable(false);
        ButtonWypelnijToolbar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonWypelnijToolbar.setName("Wypełnij"); // NOI18N
        ButtonWypelnijToolbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonWypelnijToolbarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonWypelnijToolbar);

        ButtonSredniaToolbar.setBackground(new java.awt.Color(204, 204, 204));
        ButtonSredniaToolbar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/srednia.png"))); // NOI18N
        ButtonSredniaToolbar.setToolTipText("Średnia");
        ButtonSredniaToolbar.setFocusable(false);
        ButtonSredniaToolbar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonSredniaToolbar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonSredniaToolbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSredniaToolbarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonSredniaToolbar);

        ButtonSumaToolbar.setBackground(new java.awt.Color(204, 204, 204));
        ButtonSumaToolbar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/suma.png"))); // NOI18N
        ButtonSumaToolbar.setToolTipText("Suma");
        ButtonSumaToolbar.setFocusable(false);
        ButtonSumaToolbar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonSumaToolbar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonSumaToolbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSumaToolbarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonSumaToolbar);

        ButtonInfoToolBar.setBackground(new java.awt.Color(204, 204, 204));
        ButtonInfoToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/info.png"))); // NOI18N
        ButtonInfoToolBar.setToolTipText("Informacja o programie");
        ButtonInfoToolBar.setFocusable(false);
        ButtonInfoToolBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonInfoToolBar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonInfoToolBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonInfoToolBarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonInfoToolBar);

        ButtonPomoc.setBackground(new java.awt.Color(204, 204, 204));
        ButtonPomoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/o_programie.png"))); // NOI18N
        ButtonPomoc.setToolTipText("Pomoc");
        ButtonPomoc.setFocusable(false);
        ButtonPomoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonPomoc.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonPomoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPomocActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonPomoc);

        tabelaDanych.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabelaDanych.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)}
            },
            new String [] {
                "Kolumna 1", "Kolumna 2", "Kolumna 3", "Kolumna 4", "Kolumna 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaDanych.setRowHeight(20);
        tabelaDanych.setRowMargin(2);
        tabelaDanych.setRowSelectionAllowed(false);
        tabelaDanych.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelaDanych);

        WprowadzonaLiczba.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        WprowadzonaLiczba.setText("0");
        WprowadzonaLiczba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WprowadzonaLiczbaActionPerformed(evt);
            }
        });
        WprowadzonaLiczba.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                WprowadzonaLiczbaKeyTyped(evt);
            }
        });

        spinerKolumna.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        spinerWiersz.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        ButtonWypelnij.setText("Wypełnij");
        ButtonWypelnij.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonWypelnijActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rezultat operacji", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        textAreaRezultat.setColumns(20);
        textAreaRezultat.setRows(5);
        jScrollPane1.setViewportView(textAreaRezultat);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        ButtonZerowanie.setText("Zerowanie");
        ButtonZerowanie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonZerowanieActionPerformed(evt);
            }
        });

        ButtonZapiszDoPliku.setText("Zapisz do pliku");
        ButtonZapiszDoPliku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonZapiszDoPlikuActionPerformed(evt);
            }
        });

        ComboBoxWybor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Wybierz rodzaj operacji", "Suma elementów", "Średnia elementów", "Wartości min i max" }));
        ComboBoxWybor.setToolTipText("Wybierz właściwą opcję, aby zobaczyć wyniki.");
        ComboBoxWybor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxWyborActionPerformed(evt);
            }
        });

        jLabel3.setText("Wiersz");

        jLabel4.setText("Kolumna");

        jLabel5.setText("Wpisz liczbe");

        jButton2.setText("Losowe wypełnienie");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ButtonZapiszDoBazy.setText("Zapisz do bazy");
        ButtonZapiszDoBazy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonZapiszDoBazyActionPerformed(evt);
            }
        });

        jToggleButton1.setText("jToggleButton1");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jMenuPlik.setText("Plik");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setMnemonic('Z');
        jMenuItem1.setText("Zapisz");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuPlik.add(jMenuItem1);

        jMenuBar1.add(jMenuPlik);
        jMenuPlik.getAccessibleContext().setAccessibleDescription("");

        jMenuEdycja.setText("Edycja");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Wypełnij");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuEdycja.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setText("Zerowanie");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuEdycja.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Losowo wypełnij");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuEdycja.add(jMenuItem4);

        jMenuBar1.add(jMenuEdycja);

        jMenuOperacje.setText("Operacje");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setText("Zapisz do pliku");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenuOperacje.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setText("Suma elementów");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenuOperacje.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem7.setText("Średnia elementów");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenuOperacje.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem8.setText("Wartości min i max");
        jMenuOperacje.add(jMenuItem8);

        jMenuBar1.add(jMenuOperacje);

        jMenuPomoc.setText("Pomoc");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem10.setText("O programie");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenuPomoc.add(jMenuItem10);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem9.setText("Pomoc");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenuPomoc.add(jMenuItem9);

        jMenuBar1.add(jMenuPomoc);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(ComboBoxWybor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(ButtonZapiszDoBazy)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(66, 66, 66)
                                .addComponent(WprowadzonaLiczba, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(spinerKolumna, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spinerWiersz, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonWypelnij)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonZerowanie)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonZapiszDoPliku))))
                    .addComponent(jScrollPane2))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WprowadzonaLiczba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinerKolumna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinerWiersz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonWypelnij)
                    .addComponent(ButtonZerowanie)
                    .addComponent(ButtonZapiszDoPliku)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxWybor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(ButtonZapiszDoBazy))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // deklaracja zmiennych o zasiegu klasy
    double srednia = 0;
    int suma = 0;
    int iloscWierszy;
    int iloscKolumn;
    int[][] tablica;
    
    private void ButtonWypelnijToolbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonWypelnijToolbarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonWypelnijToolbarActionPerformed

    private void WprowadzonaLiczbaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WprowadzonaLiczbaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WprowadzonaLiczbaActionPerformed
    // metoda usuwająca znaki nie bedące liczbami
    private void WprowadzonaLiczbaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WprowadzonaLiczbaKeyTyped
        if (!Liczba(evt.getKeyChar()))
            evt.consume(); // jeśli false skonsumuj znak
    }//GEN-LAST:event_WprowadzonaLiczbaKeyTyped
    
    // wpisywanie do formularza danych wpisanych poprzez spinery 
    private void ButtonWypelnijActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonWypelnijActionPerformed
        wypelnij();
    }//GEN-LAST:event_ButtonWypelnijActionPerformed

    private void ButtonSredniaToolbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSredniaToolbarActionPerformed
        srednia();
    }//GEN-LAST:event_ButtonSredniaToolbarActionPerformed

    private void ButtonSumaToolbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSumaToolbarActionPerformed
        suma();
    }//GEN-LAST:event_ButtonSumaToolbarActionPerformed

    private void ButtonZerowanieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonZerowanieActionPerformed
        zerowanie();
    }//GEN-LAST:event_ButtonZerowanieActionPerformed

    private void ButtonZapiszDoPlikuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonZapiszDoPlikuActionPerformed
        try {
            zapisz();
        } catch (IOException ex) {
            Logger.getLogger(RamkaGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonZapiszDoPlikuActionPerformed

    private void ComboBoxWyborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxWyborActionPerformed
         String wyborCombo = (String)ComboBoxWybor.getSelectedItem();
         
         if (wyborCombo == "Suma elementów")
         {
             suma();            
         }
          if (wyborCombo == "Średnia elementów")
         {
             srednia();            
         }
            if (wyborCombo == "Wartości min i max")
         { 
             minmax();
         }
    }//GEN-LAST:event_ComboBoxWyborActionPerformed

    private void ButtonInfoToolBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonInfoToolBarActionPerformed
        DialogInformacja.setVisible(true);
    }//GEN-LAST:event_ButtonInfoToolBarActionPerformed

    private void ButtonPomocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPomocActionPerformed
        HelpInfo helpInfo = new HelpInfo();
        helpInfo.setVisible(true);
    }//GEN-LAST:event_ButtonPomocActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        wypelnijLosowo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ButtonZapiszDoBazyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonZapiszDoBazyActionPerformed
 // brak połączenia z bazą
    }//GEN-LAST:event_ButtonZapiszDoBazyActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        wypelnij();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        zerowanie();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        wypelnijLosowo();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            zapisz();
        } catch (IOException ex) {
            Logger.getLogger(RamkaGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        suma();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        srednia();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        DialogInformacja.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        HelpInfo helpInfo = new HelpInfo();
        helpInfo.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DialogInformacja.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    //Średnia elementów, Wartości min i max
 // Liczba - funkcja sprawdzająca czy wprowadzony symbol jest liczbą, jeśli nie false
    private boolean Liczba(char zn)
    {
        if (zn >= '0' && zn <= '9')
            return true;
        return false;
    }
    // metoda - wypełnianie pól
    private void wypelnij()
    {
        // przypisanie liczby do zmiennej z pola po sparsowaniu
        int liczbaWpisanaZPola = Integer.parseInt(WprowadzonaLiczba.getText());
        // tworzymy dwie nowe zmienne do odczytania dancyh ze spinerów z rzutowaniem (ze spiner object)
        int nrWiersza = (Integer)spinerWiersz.getValue();
        int nrKolumny = (Integer)spinerKolumna.getValue();
        nrWiersza --; // pomniejszamy o 1 aby mieć właściwą numerację kolumn
        nrKolumny --;
        // na tabeli danych użyj metody setValueAt ...
        tabelaDanych.setValueAt(liczbaWpisanaZPola, nrWiersza, nrKolumny);
    }
    //  obliczanie średniej
    private void srednia()
    {
        srednia = 0;
        suma = 0;
        // pobierz aktualna ilość kolumn i wierszy
        int iloscWierszy = tabelaDanych.getRowCount();
        int iloscKolumn = tabelaDanych.getColumnCount();
        int iloscPol = iloscKolumn * iloscWierszy;
        
        for (int i = 0; i < iloscWierszy ; i++)
        {
                for (int j = 0; j < iloscKolumn; j++)
                {
                    // zliczana suma kolejnych pol, rzutowanie na Integer
                    suma = suma + (Integer)tabelaDanych.getValueAt(i, j);
                }
        }           
        srednia = suma / iloscPol;
        // zmienna pomocnicza aby zapamietac wcześniejsze wpisy w polu wyników
        String tekst;
        tekst = textAreaRezultat.getText();
        textAreaRezultat.setText( tekst + "\nŚrednia " + srednia);
    }

    private void suma()
    {
        suma = 0;
          // pobierz aktualna ilość kolumn i wierszy
        int iloscWierszy = tabelaDanych.getRowCount();
        int iloscKolumn = tabelaDanych.getColumnCount();
        int iloscPol = iloscKolumn * iloscWierszy;
        
        for (int i = 0; i < iloscWierszy ; i++)
        {
                for (int j = 0; j < iloscKolumn; j++)
                {
                    // zliczana suma kolejnych pol, rzutowanie na Integer
                    suma = suma + (Integer)tabelaDanych.getValueAt(i, j);
                }
        }  
        String tekst;
        tekst = textAreaRezultat.getText();
        textAreaRezultat.setText( tekst + "\nSuma " + suma);
    }
    
    private void zerowanie()
    {
        // pobierz aktualna ilość kolumn i wierszy
        int iloscWierszy = tabelaDanych.getRowCount();
        int iloscKolumn = tabelaDanych.getColumnCount();
        
        for (int i = 0; i < iloscWierszy ; i++)
        {
                for (int j = 0; j < iloscKolumn; j++)
                {
                    tabelaDanych.setValueAt('0',i,j); // ustawienie nowej wartości - 0
                }
        }  
    }
    // zapis do pliku. Z podziałem na kolumny i wiersze
    private void zapisz() throws IOException
    {
        // pobierz aktualna ilość kolumn i wierszy
//        int iloscWierszy = tabelaDanych.getRowCount();
//        int iloscKolumn = tabelaDanych.getColumnCount();
        rozmiarTablicy();
        int tekst;
        String doPliku = "";
        FileWriter fileWriter = null;
        
        for (int i = 0; i < iloscWierszy ; i++)
        {
                for (int j = 0; j < iloscKolumn; j++)
                {
                    tekst = (int) tabelaDanych.getValueAt(i,j);
                    Integer.toString(tekst);
                    doPliku = doPliku + tekst + " ";
                }
                doPliku =  doPliku + "\r\n ";
        }
//        String tekstTemp;
//        tekstTemp = textAreaRezultat.getText();
//        textAreaRezultat.setText( doPliku + "\nSuma " + suma);
    try 
    {
        fileWriter = new FileWriter("tabela.txt");
        fileWriter.write(doPliku);
    } 
    finally 
    {
        if (fileWriter != null) 
        {
            fileWriter.close();
        }
    }
    }
    
    private void minmax()
    {
       rozmiarTablicy(); // pobieramy rozmiar tablicy, ilośc wierszy i kolumn
       int min =  2147483647;           // więcej się nie da w INT
       int max = 0;
        for (int i=0; i < iloscWierszy; i++)
        {
            for (int j=0; j < iloscKolumn; j++)
            {
                if (min > tablica [i][j])
                {
                    min = tablica [i][j];
                }
                if (max < tablica [i][j])
                {
                    max = tablica [i][j];
                } 
            }        
        }
        String tekst;
        tekst = textAreaRezultat.getText();
        textAreaRezultat.setText( tekst + "\nMin " + min);
        tekst = textAreaRezultat.getText();
        textAreaRezultat.setText( tekst + "\nMax " + max);
    }
    private void wypelnijLosowo()
    {
        rozmiarTablicy(); // pobieramy rozmiar tablicy, ilośc wierszy i kolumn
        //int liczbaLosowa;
        //LinkedList liczbaLosowa = new LinkedList();       // to nie działa prawidłowo, buduje powiększającą się tablicę
        Random generator = new Random();        
        for (int i=0; i < iloscWierszy; i++)
        {
            for (int j=0; j < iloscKolumn; j++)
            {
               //liczbaLosowa.add(generator.nextInt(50));   // to nie działa prawidłowo, buduje powiększającą się tablicę
                int liczbaLosowa = generator.nextInt(99999);
               tabelaDanych.setValueAt(liczbaLosowa,i,j);   // ustawienie nowej wartości
            }        
        }
    }
    /**
     * tablica -> zrzut tabeli - zgranie tabeli do tablicy
     */
    public void rozmiarTablicy()
    {
        iloscWierszy = tabelaDanych.getRowCount();
        iloscKolumn = tabelaDanych.getColumnCount();
        tablica = new int[iloscWierszy][iloscKolumn];
         // wypelnienie tablicy pomocniczej z wartościami tabeli
        for (int i = 0; i < iloscWierszy ; i++)
        {
                for (int j = 0; j < iloscKolumn; j++)
                {
                    tablica [i][j] = (int) tabelaDanych.getValueAt(i,j);
                }
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RamkaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RamkaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RamkaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RamkaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RamkaGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonInfoToolBar;
    private javax.swing.JButton ButtonPomoc;
    private javax.swing.JButton ButtonSredniaToolbar;
    private javax.swing.JButton ButtonSumaToolbar;
    private javax.swing.JButton ButtonWypelnij;
    private javax.swing.JButton ButtonWypelnijToolbar;
    private javax.swing.JButton ButtonZapiszDoBazy;
    private javax.swing.JButton ButtonZapiszDoPliku;
    private javax.swing.JButton ButtonZerowanie;
    private javax.swing.JComboBox<String> ComboBoxWybor;
    private javax.swing.JDialog DialogInformacja;
    private javax.swing.JTextField WprowadzonaLiczba;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdycja;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenu jMenuOperacje;
    private javax.swing.JMenu jMenuPlik;
    private javax.swing.JMenu jMenuPomoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JSpinner spinerKolumna;
    private javax.swing.JSpinner spinerWiersz;
    private javax.swing.JTable tabelaDanych;
    private javax.swing.JTextArea textAreaRezultat;
    // End of variables declaration//GEN-END:variables
}